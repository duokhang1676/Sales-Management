/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import components.AddContent;
import components.ButtonRender;
import components.FormatJtable;
import components.Formater;
import components.GeneratePK;

import components.NumberFilter;
import components.PnlBanHang;
import components.ResizeContent;
import components.SpinnerEditor;
import components.TableActionCellEditor;
import components.TableActionEvent;
import dao.ChiTietHoaDonDao;

import dao.HangHoaDao;
import dao.HoaDonDao;
import dao.LoHangDao;
import entities.ChiTietHoaDon;

import entities.HangHoa;
import entities.HoaDon;
import entities.LoHang;

import printer.PdfWriterExample;
import printer.PrintExample;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Timer;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultFormatter;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;

import org.json.simple.parser.ParseException;

/**
 *
 * @author LENOVO
 */
public class ChiTietHoaDonPage extends javax.swing.JPanel {

	/**
	 * Creates new form BanHang2
	 */
	public ChiTietHoaDonPage() {

		initComponents();
		ResizeContent.resizeContent(this);
		setTable();
		FormatJtable.setCellEditableForBH(tbChiTietHoaDon);
		FormatJtable.setFontJtable(tbChiTietHoaDon);

		inputNumber();

		config();
	}

	public void loadCTHD() {
		// TODO Auto-generated method stub
		List<ChiTietHoaDon> dsCTHD = null;
		dsCTHD = new ChiTietHoaDonDao().getDSCTHDbyMaHD(hoaDon.getMaHoaDon());
		if (dsCTHD != null) {
			for (ChiTietHoaDon cthd : dsCTHD) {
				HangHoa hh = cthd.getHangHoa();
				tableModel.addRow(new Object[] { hh.getTenHangHoa(), hh.getDonViTinh(), cthd.getSoLuong(),
						Formater.decimalFormat(cthd.getDonGia()), Formater.decimalFormat(cthd.tinhThanhTien()) });
			}

		}
	}

	private void config() {
		// TODO Auto-generated method stub

		Font fontB = new Font("Arial", Font.BOLD, 14);
		Font font = new Font("Arial", Font.PLAIN, 14);

		txtMaHD.setFont(fontB);

		txtTongTien.setFont(fontB);

		txtTienDua.setFont(font);
		txtTienThua.setFont(fontB);
		txtGhiChu.setFont(font);

		((AbstractDocument) txtTienDua.getDocument()).setDocumentFilter(new NumberFilter());
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		pnlHeader = new javax.swing.JPanel();
		lblThoiGian = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		pnlBody = new javax.swing.JPanel();
		pnlLeft = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		tbChiTietHoaDon = new javax.swing.JTable();
		pnlRight = new javax.swing.JPanel();
		pnlThanhToan = new javax.swing.JPanel();
		lblTongTien = new javax.swing.JLabel();
		lblTienDua = new javax.swing.JLabel();
		lblTienThua = new javax.swing.JLabel();
		lblGhiChu = new javax.swing.JLabel();
		btnInHD = new javax.swing.JButton();
		txtTongTien = new javax.swing.JTextField();
		txtTienDua = new javax.swing.JTextField();
		txtTienThua = new javax.swing.JTextField();
		spGhiChu = new javax.swing.JScrollPane();
		txtGhiChu = new javax.swing.JTextArea();
		txtMaHD = new javax.swing.JTextField();
		lblMaHD = new javax.swing.JLabel();

		setLayout(new java.awt.BorderLayout());

		pnlHeader.setBackground(new java.awt.Color(255, 255, 255));
		pnlHeader.setPreferredSize(new java.awt.Dimension(1920, 50));
		pnlHeader.setPreferredSize(new Dimension(ResizeContent.getWidth(), 50));

		lblThoiGian.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
		lblThoiGian.setText("Thời gian tạo:");
		lblThoiGian.setPreferredSize(new Dimension(pnlRight.getPreferredSize().width, 20));

		jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
		jLabel1.setForeground(new java.awt.Color(51, 51, 255));
		jLabel1.setText("CHI TIẾT HÓA ĐƠN");

		javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
		pnlHeader.setLayout(pnlHeaderLayout);
		pnlHeaderLayout.setHorizontalGroup(pnlHeaderLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlHeaderLayout.createSequentialGroup().addContainerGap().addComponent(jLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1208, Short.MAX_VALUE)
						.addComponent(lblThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 462,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(14, 14, 14)));
		pnlHeaderLayout.setVerticalGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(pnlHeaderLayout.createSequentialGroup().addContainerGap(15, Short.MAX_VALUE)
						.addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1).addComponent(lblThoiGian, javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap()));

		add(pnlHeader, java.awt.BorderLayout.NORTH);

		pnlBody.setBackground(new java.awt.Color(255, 255, 255));
		pnlBody.setPreferredSize(new java.awt.Dimension(1920, 720));
		pnlBody.setLayout(new java.awt.BorderLayout());

		pnlLeft.setBackground(new java.awt.Color(255, 255, 255));
		pnlLeft.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		pnlLeft.setPreferredSize(new java.awt.Dimension(1500, 720));
		pnlLeft.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 1000));

		tbChiTietHoaDon.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
		tbChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null },
						{ null, null, null, null, null, null }, { null, null, null, null, null, null } },
				new String[] { "Tên sản phẩm", "Đơn vị tính", "Số lượng", "Giá bán", "Thành tiền", "" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.Object.class, java.lang.Integer.class,
					java.lang.Double.class, java.lang.Double.class, java.lang.Object.class };
			boolean[] canEdit = new boolean[] { false, true, true, false, false, true };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		tbChiTietHoaDon.setMaximumSize(new java.awt.Dimension(2147483647, 500));
		tbChiTietHoaDon.setMinimumSize(new java.awt.Dimension(90, 500));
		tbChiTietHoaDon.setPreferredSize(new java.awt.Dimension(1500, 1000));
		tbChiTietHoaDon.setRequestFocusEnabled(false);
		tbChiTietHoaDon.setRowHeight(40);
		tbChiTietHoaDon.setSelectionBackground(new java.awt.Color(193, 219, 208));
		jScrollPane1.setViewportView(tbChiTietHoaDon);

		pnlLeft.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		pnlBody.add(pnlLeft, java.awt.BorderLayout.CENTER);

		pnlRight.setPreferredSize(new java.awt.Dimension(530, 720));
		if (ResizeContent.getScale() == 1)
			pnlRight.setPreferredSize(new java.awt.Dimension((int) ((int) ResizeContent.getWidth() * 0.28),
					(int) ResizeContent.getHeight() - 270));
		pnlRight.setLayout(new java.awt.BorderLayout());

		pnlThanhToan.setBackground(new java.awt.Color(255, 255, 255));
		pnlThanhToan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		pnlThanhToan.setPreferredSize(new java.awt.Dimension(100, 414));

		lblTongTien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		lblTongTien.setText("Tổng tiền:");

		lblTienDua.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		lblTienDua.setText("Tiền khách đưa:");

		lblTienThua.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		lblTienThua.setText("Tiền thừa:");

		lblGhiChu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		lblGhiChu.setText("Ghi chú:");

		btnInHD.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
		btnInHD.setText("In hóa đơn");
		btnInHD.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnInHDActionPerformed(evt);
			}
		});

		txtTongTien.setEditable(false);
		txtTongTien.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtTongTienActionPerformed(evt);
			}
		});

		txtTienDua.setEditable(false);
		txtTienDua.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				txtTienDuaMouseReleased(evt);
			}
		});
		txtTienDua.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtTienDuaActionPerformed(evt);
			}
		});

		txtTienThua.setEditable(false);

		txtGhiChu.setEditable(false);
		txtGhiChu.setColumns(20);
		txtGhiChu.setRows(5);
		txtGhiChu.addAncestorListener(new javax.swing.event.AncestorListener() {
			public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
				txtGhiChuAncestorAdded(evt);
			}

			public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
			}

			public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
			}
		});
		spGhiChu.setViewportView(txtGhiChu);

		txtMaHD.setEditable(false);
		txtMaHD.setHorizontalAlignment(javax.swing.JTextField.LEFT);
		txtMaHD.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				txtMaHDActionPerformed(evt);
			}
		});

		lblMaHD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
		lblMaHD.setText("Mã hóa đơn:");

		javax.swing.GroupLayout pnlThanhToanLayout = new javax.swing.GroupLayout(pnlThanhToan);
		pnlThanhToan.setLayout(pnlThanhToanLayout);
		pnlThanhToanLayout
				.setHorizontalGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnlThanhToanLayout.createSequentialGroup().addContainerGap()
								.addGroup(pnlThanhToanLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(btnInHD, javax.swing.GroupLayout.PREFERRED_SIZE, 515,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThanhToanLayout
												.createSequentialGroup().addGroup(pnlThanhToanLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(lblTongTien,
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(lblTienDua,
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(lblGhiChu,
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																lblTienThua,
																javax.swing.GroupLayout.Alignment.TRAILING))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addGroup(pnlThanhToanLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																false)
														.addComponent(txtTienThua,
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(txtTienDua,
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(spGhiChu,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE, 340,
																Short.MAX_VALUE)
														.addComponent(txtTongTien,
																javax.swing.GroupLayout.Alignment.LEADING))))
								.addContainerGap(7, Short.MAX_VALUE))
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								pnlThanhToanLayout.createSequentialGroup()
										.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(lblMaHD)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 340,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap()));
		pnlThanhToanLayout
				.setVerticalGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(pnlThanhToanLayout.createSequentialGroup().addGap(20, 20, 20)
								.addGroup(pnlThanhToanLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addComponent(lblMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(pnlThanhToanLayout.createSequentialGroup()
												.addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 26,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(2, 2, 2)))
								.addGap(93, 93, 93)
								.addGroup(pnlThanhToanLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lblTongTien).addComponent(txtTongTien,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(pnlThanhToanLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lblTienDua).addComponent(txtTienDua,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(pnlThanhToanLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(lblTienThua).addComponent(txtTienThua,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(pnlThanhToanLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(lblGhiChu).addComponent(spGhiChu,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18).addComponent(btnInHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(318, Short.MAX_VALUE)));

		pnlRight.add(pnlThanhToan, java.awt.BorderLayout.CENTER);

		pnlBody.add(pnlRight, java.awt.BorderLayout.EAST);

		add(pnlBody, java.awt.BorderLayout.CENTER);
	}// </editor-fold>//GEN-END:initComponents

	private void drop() {
		// TODO Auto-generated method stub
		tableModel.setRowCount(0);
		dsHH.clear();

		txtTongTien.setText("");

		txtTienDua.setText("");
		txtTienThua.setText("");
		txtGhiChu.setText("");

	}

	private void txtTienDuaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtTienDuaActionPerformed
		// TODO add your handling code here:

		// System.out.println(Double.parseDouble(txtTienDua.getText().replaceAll(",",
		// "")));
	}// GEN-LAST:event_txtTienDuaActionPerformed

	private void txtGhiChuAncestorAdded(javax.swing.event.AncestorEvent evt) {// GEN-FIRST:event_txtGhiChuAncestorAdded
		// TODO add your handling code here:
	}// GEN-LAST:event_txtGhiChuAncestorAdded

	private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtTongTienActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtTongTienActionPerformed

	private void txtTienDuaMouseReleased(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_txtTienDuaMouseReleased
		// TODO add your handling code here:

	}// GEN-LAST:event_txtTienDuaMouseReleased

	private void txtMaHDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtMaHDActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtMaHDActionPerformed

	private void btnInHDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnInHDActionPerformed
		// TODO add your handling code here:
		PdfWriterExample.writePdf(tableModel, hoaDon);
		PrintExample.printContent();
	}// GEN-LAST:event_btnInHDActionPerformed

	public void setTable() {

		tbChiTietHoaDon.setModel(tableModel);
		TableColumn column1 = tbChiTietHoaDon.getColumnModel().getColumn(0);
		column1.setPreferredWidth(200);
		FormatJtable.setCellEditable(tbChiTietHoaDon);
	}

	public void inputNumber() {
		DocumentFilter filter = new DocumentFilter() {
			@Override
			public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
					throws BadLocationException {
				if (string.matches("[0-9]*")) {
					super.insertString(fb, offset, string, attr);
				}
			}

			@Override
			public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs)
					throws BadLocationException {
				if (text.matches("[0-9]*")) {
					super.replace(fb, offset, length, text, attrs);
				}
			}
		};

		((PlainDocument) txtTienDua.getDocument()).setDocumentFilter(filter);
	}

	private List<HangHoa> dsHH = new ArrayList<>();
	public HoaDon hoaDon = HoaDonPage.hoaDon;

	String headerString[] = "Tên sản phẩm;Đơn vị tính;Số lượng;Giá bán;Thành tiền".split(";");
	private DefaultTableModel tableModel = new DefaultTableModel(headerString, 0);

	// Variables declaration - do not modify//GEN-BEGIN:variables
	public javax.swing.JButton btnInHD;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JLabel lblGhiChu;
	private javax.swing.JLabel lblMaHD;
	public javax.swing.JLabel lblThoiGian;
	private javax.swing.JLabel lblTienDua;
	private javax.swing.JLabel lblTienThua;
	private javax.swing.JLabel lblTongTien;
	private javax.swing.JPanel pnlBody;
	private javax.swing.JPanel pnlHeader;
	private javax.swing.JPanel pnlLeft;
	private javax.swing.JPanel pnlRight;
	private javax.swing.JPanel pnlThanhToan;
	private javax.swing.JScrollPane spGhiChu;
	private javax.swing.JTable tbChiTietHoaDon;
	public javax.swing.JTextArea txtGhiChu;
	public javax.swing.JTextField txtMaHD;
	public javax.swing.JTextField txtTienDua;
	public javax.swing.JTextField txtTienThua;
	public javax.swing.JTextField txtTongTien;
	// End of variables declaration//GEN-END:variables

}

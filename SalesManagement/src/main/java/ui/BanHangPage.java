/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;


import dao.ChiTietHoaDonDao;

import dao.HangHoaDao;
import dao.HoaDonDao;

import dao.LoHangDao;

import entities.ChiTietHoaDon;

import entities.HangHoa;
import entities.HoaDon;

import entities.LoHang;

import printer.PdfWriterExample;
import printer.PrintExample;

import static org.junit.Assert.assertNotNull;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Random;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultFormatter;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;
import javax.swing.text.DocumentFilter.FilterBypass;

import org.json.simple.parser.ParseException;

import components.AddContent;
import components.ButtonRender;
import components.FormatJtable;
import components.Formater;
import components.GeneratePK;

import components.NumberFilter;
import components.NumericDocumentFilter;
import components.PnlBanHang;
import components.ResizeContent;
import components.SpinnerEditor;
import components.TableActionCellEditor;
import components.TableActionEvent;

/**
 *
 * @author LENOVO
 */
public class BanHangPage extends javax.swing.JPanel {

    /**
     * Creates new form BanHang2
     */
    public BanHangPage() {
    	hangHoaDao = new HangHoaDao();
    	hoaDonDao = new HoaDonDao();
    	
    	chiTietHDDao = new ChiTietHoaDonDao();
    	loHangDAO = new LoHangDao();
    	
        initComponents();
        ResizeContent.resizeContent(this);
        setTable();
       
        FormatJtable.setCellEditableForBH(tbChiTietHoaDon);
        phimTat();
        
        updateTime();
        //Do du lieu don thuoc mau vao combobox
       
       
        config();
        timMaSP1.requestFocus();
    }

    private void config() {
		// TODO Auto-generated method stub
    	setBorderHD(pnl1);
		pnl2.setVisible(false);
		pnl3.setVisible(false);
		pnl4.setVisible(false);
		pnl5.setVisible(false);

		lblSpace.setPreferredSize(new Dimension(lblSpace.getWidth()-60+155*5,lblSpace.getHeight()));
    	
    	
    	Font fontB = new Font("Arial", Font.BOLD, 14);
		Font font = new Font("Arial", Font.PLAIN, 14);
		
		txtTenKH.setFont(fontB);
		txtSDTKH.setFont(font);
		txtDiemThuong.setFont(font);
		txtTongTien.setFont(fontB);
		
		txtTienDua.setFont(font);
		txtTienThua.setFont(fontB);
		txtGhiChu.setFont(font);

		 ((AbstractDocument) txtTienDua.getDocument()).setDocumentFilter(new NumericDocumentFilter());
       
       //((AbstractDocument) txtDiemThuong.getDocument()).setDocumentFilter(new NumericDocumentFilter());
       // ((AbstractDocument) txtDiemQuyDoi.getDocument()).setDocumentFilter(new NumberFilter());
        //((AbstractDocument) txtTienDua.getDocument()).setDocumentFilter(new NumberFilter());
	}

	/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHeader = new javax.swing.JPanel();
        lbLapHD = new javax.swing.JLabel();
        timMaSP1 = new sampleUi.TimMaSP();
        txtTimer = new javax.swing.JTextField();
        pnlBody = new javax.swing.JPanel();
        pnlLeft = new javax.swing.JPanel();
        lblPhimTat = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbChiTietHoaDon = new javax.swing.JTable();
        header = new javax.swing.JPanel();
        pnl1 = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        btn1 = new javax.swing.JButton();
        pnl2 = new javax.swing.JPanel();
        btn2 = new javax.swing.JButton();
        lbl2 = new javax.swing.JLabel();
        pnl3 = new javax.swing.JPanel();
        btn3 = new javax.swing.JButton();
        lbl3 = new javax.swing.JLabel();
        pnl4 = new javax.swing.JPanel();
        btn4 = new javax.swing.JButton();
        lbl4 = new javax.swing.JLabel();
        pnl5 = new javax.swing.JPanel();
        btn5 = new javax.swing.JButton();
        lbl5 = new javax.swing.JLabel();
        lblSpace = new javax.swing.JLabel();
        btnThemHoaDon = new javax.swing.JButton();
        pnlRight = new javax.swing.JPanel();
        pnlKhachHang = new javax.swing.JPanel();
        lblKhachHang = new javax.swing.JLabel();
        btnThemKhachHang = new javax.swing.JButton();
        pnlThongTinKhachHang = new javax.swing.JPanel();
        lblTenKH = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblDiemThuong = new javax.swing.JLabel();
        txtTenKH = new javax.swing.JTextField();
        txtSDTKH = new javax.swing.JTextField();
        txtDiemThuong = new javax.swing.JTextField();
        timSDTKhachHang1 = new sampleUi.TimSDTKhachHang();
        pnlThanhToan = new javax.swing.JPanel();
        lblThanhToan = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        lblTienDua = new javax.swing.JLabel();
        lblTienThua = new javax.swing.JLabel();
        lblGhiChu = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        btnThanhToanVaInHoaDon = new javax.swing.JButton();
        txtTongTien = new javax.swing.JTextField();
        txtTienDua = new javax.swing.JTextField();
        txtTienThua = new javax.swing.JTextField();
        spGhiChu = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        pnlHeader.setBackground(new java.awt.Color(255, 255, 255));
        pnlHeader.setPreferredSize(new java.awt.Dimension(1920, 50));
        pnlHeader.setPreferredSize(new Dimension(ResizeContent.getWidth(),50));

        lbLapHD.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbLapHD.setForeground(new java.awt.Color(51, 51, 255));
        lbLapHD.setText("LẬP HOÁ ĐƠN");

        timMaSP1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        timMaSP1.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-find-24.png"))); // NOI18N
        timMaSP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timMaSP1ActionPerformed(evt);
            }
        });

        txtTimer.setEditable(false);
        txtTimer.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        txtTimer.setBorder(null);

        javax.swing.GroupLayout pnlHeaderLayout = new javax.swing.GroupLayout(pnlHeader);
        pnlHeader.setLayout(pnlHeaderLayout);
        pnlHeaderLayout.setHorizontalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lbLapHD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(timMaSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(351, 351, 351)
                .addComponent(txtTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(375, 375, 375))
        );
        pnlHeaderLayout.setVerticalGroup(
            pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGroup(pnlHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeaderLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lbLapHD, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHeaderLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(timMaSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7))
            .addGroup(pnlHeaderLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtTimer)
                .addContainerGap())
        );

        add(pnlHeader, java.awt.BorderLayout.NORTH);

        pnlBody.setBackground(new java.awt.Color(255, 255, 255));
        pnlBody.setPreferredSize(new java.awt.Dimension(1920, 720));
        pnlBody.setLayout(new java.awt.BorderLayout());

        pnlLeft.setBackground(new java.awt.Color(255, 255, 255));
        pnlLeft.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlLeft.setPreferredSize(new java.awt.Dimension(500, 720));
        pnlLeft.setLayout(new java.awt.BorderLayout());

        lblPhimTat.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblPhimTat.setText("Nhấn F4 để quét mã vạch");
        pnlLeft.add(lblPhimTat, java.awt.BorderLayout.SOUTH);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 500));

        tbChiTietHoaDon.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tbChiTietHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sản phẩm", "Đơn vị tính", "Số lượng", "Giá bán", "Thành tiền", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbChiTietHoaDon.setRequestFocusEnabled(false);
        tbChiTietHoaDon.setRowHeight(40);
        jScrollPane1.setViewportView(tbChiTietHoaDon);

        pnlLeft.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        header.setBackground(new java.awt.Color(255, 255, 255));
        header.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnl1.setBackground(new java.awt.Color(193, 219, 208));
        pnl1.setPreferredSize(new java.awt.Dimension(150, 30));

        lbl1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbl1.setForeground(new java.awt.Color(255, 0, 0));
        lbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl1.setText("Hoá đơn 1");
        lbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl1MouseClicked(evt);
            }
        });

        btn1.setBackground(new java.awt.Color(193, 219, 208));
        btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-close-24.png"))); // NOI18N
        btn1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(lbl1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        header.add(pnl1);

        pnl2.setBackground(new java.awt.Color(193, 219, 208));
        pnl2.setPreferredSize(new java.awt.Dimension(150, 30));

        btn2.setBackground(new java.awt.Color(193, 219, 208));
        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-close-24.png"))); // NOI18N
        btn2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        lbl2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbl2.setForeground(new java.awt.Color(255, 0, 0));
        lbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl2.setText("Hoá đơn 2");
        lbl2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        header.add(pnl2);

        pnl3.setBackground(new java.awt.Color(193, 219, 208));
        pnl3.setPreferredSize(new java.awt.Dimension(150, 30));

        btn3.setBackground(new java.awt.Color(193, 219, 208));
        btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-close-24.png"))); // NOI18N
        btn3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        lbl3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbl3.setForeground(new java.awt.Color(255, 0, 0));
        lbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl3.setText("Hoá đơn 3");
        lbl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnl3Layout = new javax.swing.GroupLayout(pnl3);
        pnl3.setLayout(pnl3Layout);
        pnl3Layout.setHorizontalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl3Layout.setVerticalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(lbl3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        header.add(pnl3);

        pnl4.setBackground(new java.awt.Color(193, 219, 208));
        pnl4.setPreferredSize(new java.awt.Dimension(150, 30));

        btn4.setBackground(new java.awt.Color(193, 219, 208));
        btn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-close-24.png"))); // NOI18N
        btn4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        lbl4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbl4.setForeground(new java.awt.Color(255, 0, 0));
        lbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl4.setText("Hoá đơn 4");
        lbl4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnl4Layout = new javax.swing.GroupLayout(pnl4);
        pnl4.setLayout(pnl4Layout);
        pnl4Layout.setHorizontalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lbl4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl4Layout.setVerticalGroup(
            pnl4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
            .addComponent(lbl4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        header.add(pnl4);

        pnl5.setBackground(new java.awt.Color(193, 219, 208));
        pnl5.setPreferredSize(new java.awt.Dimension(150, 30));

        btn5.setBackground(new java.awt.Color(193, 219, 208));
        btn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-close-24.png"))); // NOI18N
        btn5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        lbl5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbl5.setForeground(new java.awt.Color(255, 0, 0));
        lbl5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl5.setText("Hoá đơn 5");
        lbl5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnl5Layout = new javax.swing.GroupLayout(pnl5);
        pnl5.setLayout(pnl5Layout);
        pnl5Layout.setHorizontalGroup(
            pnl5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lbl5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl5Layout.setVerticalGroup(
            pnl5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lbl5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        header.add(pnl5);

        lblSpace.setText("jLabel2");
        lblSpace.setPreferredSize(new java.awt.Dimension(100, 20));
        header.add(lblSpace);

        btnThemHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/image 15.png"))); // NOI18N
        btnThemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHoaDonActionPerformed(evt);
            }
        });
        header.add(btnThemHoaDon);

        pnlLeft.add(header, java.awt.BorderLayout.NORTH);

        pnlBody.add(pnlLeft, java.awt.BorderLayout.CENTER);

        pnlRight.setPreferredSize(new java.awt.Dimension(900, 720));
        if(ResizeContent.getScale()==1)pnlRight.setPreferredSize(new java.awt.Dimension((int)((int)ResizeContent.getWidth()*0.28),(int)ResizeContent.getHeight()-270));
        pnlRight.setLayout(new java.awt.BorderLayout());

        pnlKhachHang.setBackground(new java.awt.Color(255, 255, 255));
        pnlKhachHang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlKhachHang.setPreferredSize(new java.awt.Dimension(100, 150));

        lblKhachHang.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblKhachHang.setForeground(new java.awt.Color(255, 0, 0));
        lblKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Nguoi.png"))); // NOI18N
        lblKhachHang.setText("Khách hàng");

        btnThemKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/image 15.png"))); // NOI18N
        btnThemKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemKhachHangActionPerformed(evt);
            }
        });

        pnlThongTinKhachHang.setBackground(new java.awt.Color(255, 255, 255));

        lblTenKH.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTenKH.setText("Tên khách hàng:");

        lblSDT.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblSDT.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSDT.setText("Số điện thoại:");

        lblDiemThuong.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblDiemThuong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDiemThuong.setText("Điểm thưởng:");

        txtTenKH.setEditable(false);
        txtTenKH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTenKH.setText("Vãng lai");
        txtTenKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenKHActionPerformed(evt);
            }
        });

        txtSDTKH.setEditable(false);
        txtSDTKH.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDiemThuong.setEditable(false);
        txtDiemThuong.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout pnlThongTinKhachHangLayout = new javax.swing.GroupLayout(pnlThongTinKhachHang);
        pnlThongTinKhachHang.setLayout(pnlThongTinKhachHangLayout);
        pnlThongTinKhachHangLayout.setHorizontalGroup(
            pnlThongTinKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinKhachHangLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(pnlThongTinKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDiemThuong)
                    .addComponent(lblSDT)
                    .addComponent(lblTenKH))
                .addGap(18, 18, 18)
                .addGroup(pnlThongTinKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlThongTinKhachHangLayout.setVerticalGroup(
            pnlThongTinKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongTinKhachHangLayout.createSequentialGroup()
                .addGroup(pnlThongTinKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlThongTinKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlThongTinKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiemThuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        timSDTKhachHang1.setEditable(false);
        timSDTKhachHang1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        timSDTKhachHang1.setPrefixIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-find-24.png"))); // NOI18N
        timSDTKhachHang1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timSDTKhachHang1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlKhachHangLayout = new javax.swing.GroupLayout(pnlKhachHang);
        pnlKhachHang.setLayout(pnlKhachHangLayout);
        pnlKhachHangLayout.setHorizontalGroup(
            pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlThongTinKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlKhachHangLayout.createSequentialGroup()
                        .addComponent(lblKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThemKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timSDTKhachHang1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlKhachHangLayout.setVerticalGroup(
            pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKhachHangLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timSDTKhachHang1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlThongTinKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlRight.add(pnlKhachHang, java.awt.BorderLayout.PAGE_START);

        pnlThanhToan.setBackground(new java.awt.Color(255, 255, 255));
        pnlThanhToan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlThanhToan.setPreferredSize(new java.awt.Dimension(100, 424));

        lblThanhToan.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblThanhToan.setForeground(new java.awt.Color(255, 0, 0));
        lblThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/ThanhToan.png"))); // NOI18N
        lblThanhToan.setText("Thanh toán");

        lblTongTien.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTongTien.setText("Tổng tiền:");

        lblTienDua.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTienDua.setText("Tiền khách đưa:");

        lblTienThua.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblTienThua.setText("Tiền thừa (Làm tròn):");

        lblGhiChu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblGhiChu.setText("Ghi chú:");

        btnThanhToan.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnThanhToanVaInHoaDon.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThanhToanVaInHoaDon.setText("Thanh toán và in hoá đơn");
        btnThanhToanVaInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanVaInHoaDonActionPerformed(evt);
            }
        });

        txtTongTien.setEditable(false);
        txtTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongTienActionPerformed(evt);
            }
        });

        txtTienDua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTienDuaActionPerformed(evt);
            }
        });

        txtTienThua.setEditable(false);

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        txtGhiChu.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                txtGhiChuAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        spGhiChu.setViewportView(txtGhiChu);

        javax.swing.GroupLayout pnlThanhToanLayout = new javax.swing.GroupLayout(pnlThanhToan);
        pnlThanhToan.setLayout(pnlThanhToanLayout);
        pnlThanhToanLayout.setHorizontalGroup(
            pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhToanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnThanhToanVaInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblThanhToan)
                        .addGroup(pnlThanhToanLayout.createSequentialGroup()
                            .addGap(4, 4, 4)
                            .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(pnlThanhToanLayout.createSequentialGroup()
                                    .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblTienThua)
                                        .addComponent(lblTongTien, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblTienDua, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblGhiChu, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtTienThua, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtTienDua, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtTongTien, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(spGhiChu, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)))))))
                .addGap(0, 0, 0))
        );
        pnlThanhToanLayout.setVerticalGroup(
            pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhToanLayout.createSequentialGroup()
                .addComponent(lblThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTongTien)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTienDua)
                    .addComponent(txtTienDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTienThua)
                    .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGhiChu)
                    .addComponent(spGhiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThanhToanVaInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        pnlRight.add(pnlThanhToan, java.awt.BorderLayout.CENTER);

        pnlBody.add(pnlRight, java.awt.BorderLayout.EAST);

        add(pnlBody, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemKhachHangActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_btnThemKhachHangActionPerformed

    private void txtTenKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenKHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenKHActionPerformed
//
    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:flag3
    	thanhToan();
 
    }//GEN-LAST:event_btnThanhToanActionPerformed

	

	private boolean thanhToan() {
	// TODO Auto-generated method stub
    	if(dsHH.size()==0) {
    		JOptionPane.showMessageDialog(null,"Hóa đơn chưa có sản phẩm!","Cảnh báo", JOptionPane.WARNING_MESSAGE);
    		return false;
    	}
    	
    	if(!ktTienKhachDua())
    		return false;
    	
    	LocalDateTime now = LocalDateTime.now();
    	HoaDon hd = null;
    	
		//Tạo đối tượng hóa đơn	
    	String maHD = "";
		try {
			maHD = GeneratePK.getMaHD().toString();
		} catch (IOException | ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, "Lỗi tạo hóa đơn!");
			return false;
		}
		double tienKT = Double.parseDouble(txtTienDua.getText().toString().replaceAll(",", ""));
		double tongTien = Double.parseDouble(txtTongTien.getText().toString().replaceAll(",", ""));
		String ghiChu = txtGhiChu.getText();
		
		hd = new HoaDon(maHD, now, tienKT, ghiChu, tongTien);
		//Thêm hóa đơn vào CSDL
		if(themHoaDon(hd)) {
			for(int i = 0;i<dsHH.size();i++) {
				HangHoa hh = dsHH.get(i);
				int soLuong = Integer.parseInt(tableModel.getValueAt(i, 2).toString());
				
				//Cập nhật số lượng định mức
				hh.setSoLuongDinhMuc(hh.getSoLuongDinhMuc()-soLuong);
				hangHoaDao.capNhatSoLuongHangHoa(hh);
				//Cập nhật số lượng lô
				List<LoHang> dsLo = null;
				dsLo = loHangDAO.timLoHangTheoMaHangHoa(hh.getMaHangHoa());
				int soLuongTru = soLuong;
				double loiNhuan = 0;
				if(dsLo!=null) {
					for (LoHang loHang : dsLo) {
						if(loHang.getSoLuong()>=soLuongTru) {
							loHang.setSoLuong(loHang.getSoLuong()-soLuongTru);
							loHangDAO.capNhatSoLuongLoTheoMa(loHang);
							//Tính lợi nhuận của hàng hóa tại thời điểm
							loiNhuan += soLuongTru*(hh.getGiaBan()-loHang.getGiaNhap());
							break;
						}else {//Trường hợp lô hàng không đủ số lượng
							loiNhuan += loHang.getSoLuong()*(hh.getGiaBan()-loHang.getGiaNhap());
							soLuongTru -= loHang.getSoLuong();
							loHang.setSoLuong(0);
							loHangDAO.capNhatSoLuongLoTheoMa(loHang);
						}
					}
				}	
				
				ChiTietHoaDon cthd = new ChiTietHoaDon(hd, soLuong, hh.getGiaBan(), hh,loiNhuan);
				//Thêm chi tiết hóa đơn
				chiTietHDDao.addChiTietHD(cthd);
				
			}
			PdfWriterExample.writePdf(tableModel,hd);
			JOptionPane.showMessageDialog(null, "Tạo hóa đơn thành công");
			drop();
			return true;
		}else {
			JOptionPane.showMessageDialog(null, "Lỗi tạo hóa đơn!");
			return false;
		}			
}

	private boolean themHoaDon(HoaDon hd) {
	// TODO Auto-generated method stub
		return hoaDonDao.addHoaDon(hd);		
	}
	
	

	private void drop() {
		// TODO Auto-generated method stub
		tableModel.setRowCount(0);
		dsHH.clear();
		timSDTKhachHang1.setText("");
		txtTenKH.setText("");
		txtSDTKH.setText("");
		txtDiemThuong.setText("");
		txtTongTien.setText("");
		
		txtTienDua.setText("");
		txtTienThua.setText("");
		txtGhiChu.setText("");
		timMaSP1.setText("");
		timMaSP1.requestFocus();
		timMaSP1.selectAll();
	}
	
	private void btnThanhToanVaInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanVaInHoaDonActionPerformed
        // TODO add your handling code here:
		if(thanhToan())
			PrintExample.printContent();
    }//GEN-LAST:event_btnThanhToanVaInHoaDonActionPerformed

    private void txtTienDuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTienDuaActionPerformed
        // TODO add your handling code here:
    	ktTienKhachDua();
    	
    }//GEN-LAST:event_txtTienDuaActionPerformed

    private boolean ktTienKhachDua() {
		// TODO Auto-generated method stub
    	if(updateTienThua()==-1) {
    		JOptionPane.showMessageDialog(null, "Tiền khách đưa phải lớn hơn hoặc bằng tổng tiền!");
    		return false;
    	}
        return true;
	}

	private void txtGhiChuAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txtGhiChuAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGhiChuAncestorAdded

    private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongTienActionPerformed

    private void timMaSP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timMaSP1ActionPerformed
        // TODO add your handling code here:
    	//flag1
    	String maSp = timMaSP1.getText().trim();
    	if(maSp.isEmpty())
    		return;
    	HangHoa hh = hangHoaDao.timHangHoaTheoMaVachVaMaHH(maSp);
    	if(hh==null) {
    		JOptionPane.showMessageDialog(null, "Không tìm thấy hàng hóa!");
    		timMaSP1.requestFocus();
    		timMaSP1.selectAll();
    		return;
    	}else {
    		for(int i = 0;i<tableModel.getRowCount();i++) {
    			if(hh.getMaHangHoa().equals(dsHH.get(i).getMaHangHoa())) {
    				int soLuong = Integer.parseInt(tableModel.getValueAt(i, 2).toString());
    				if(hh.getSoLuongDinhMuc()<=soLuong) {
    					JOptionPane.showMessageDialog(null, "Hàng hóa không đủ số lượng!");
    	    			return;
    				}
    				double thanhTien = (soLuong+1) * hh.getGiaBan();
    				tableModel.setValueAt(soLuong + 1, i, 2);
    				tableModel.setValueAt(Formater.decimalFormat(thanhTien), i, 4);
    				timMaSP1.setText("");
    	        	timMaSP1.requestFocus();
    	        	reload();
    				return;
    			}
    		}
    		if(hh.getSoLuongDinhMuc()==0) {
    			JOptionPane.showMessageDialog(null, "Hàng hóa không đủ số lượng!");
    			return;
    		}
    		tableModel.addRow(new Object[] {hh.getTenHangHoa(),hh.getDonViTinh(),1,Formater.decimalFormat(hh.getGiaBan()),Formater.decimalFormat(hh.getGiaBan())});
    		dsHH.add(hh);
    		timMaSP1.setText("");
        	timMaSP1.requestFocus();
        	reload();
    	}
    }//GEN-LAST:event_timMaSP1ActionPerformed

    private void timSDTKhachHang1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timSDTKhachHang1ActionPerformed
        // TODO add your handling code here:
    	
    	
    }//GEN-LAST:event_timSDTKhachHang1ActionPerformed

    private void moveBHPage(BanHangPage bh,int num) {//Hàm copy header
    	bh.pnl1.setVisible(pnl1.isVisible());
    	bh.pnl2.setVisible(pnl2.isVisible());
    	bh.pnl3.setVisible(pnl3.isVisible());
    	bh.pnl4.setVisible(pnl4.isVisible());
    	bh.pnl5.setVisible(pnl5.isVisible());
    	
    	bh.hdCount = hdCount;
    	bh.lblSpace.setPreferredSize(lblSpace.getPreferredSize());
    	bh.timMaSP1.requestFocus();
    	if(num==1)
    		bh.setBorderHD(bh.pnl1);
    	else if(num==2)
    		bh.setBorderHD(bh.pnl2);
    	else if(num==3)
    		bh.setBorderHD(bh.pnl3);
    	else if(num==4)
    		bh.setBorderHD(bh.pnl4);
    	else if(num==5)
    		bh.setBorderHD(bh.pnl5);
    	
    	PnlBanHang.current = num;
    	AddContent.addContent(bh);
    }
    private void dropBorder() {
    	pnl1.setBorder(null);
    	pnl2.setBorder(null);
    	pnl3.setBorder(null);
    	pnl4.setBorder(null);
    	pnl5.setBorder(null);
    	
    }
    private void setBorderHD(JPanel pnl) {
    	dropBorder();
    	pnl.setBorder(BorderFactory.createLineBorder(Color.BLUE,2));
    	
    }
    private void lbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl1MouseClicked
        // TODO add your handling code here:111
        if(pnl1.getBorder()==null)
        moveBHPage(PnlBanHang.bh1,1);
    }//GEN-LAST:event_lbl1MouseClicked
    
    private void removeHDPage(JPanel pnl, int num) {
    	if(hdCount==1)return;
    	if(num==1)
    		PnlBanHang.bh1.drop();
    	else if(num==2)
    		PnlBanHang.bh2.drop();
    	else if(num==3)
    		PnlBanHang.bh3.drop();
    	else if(num==4)
    		PnlBanHang.bh4.drop();
    	else if(num==5)
    		PnlBanHang.bh5.drop();
    	
    	pnl.setVisible(false);
    	lblSpace.setPreferredSize(new Dimension(lblSpace.getWidth()+155,lblSpace.getHeight()));
    	hdCount--;
    	if(pnl.getBorder()!=null) {
    		if(pnl1.isVisible()) {
    			setBorderHD(pnl1);
    			moveBHPage(PnlBanHang.bh1, 1);
    			return;
    		}else if(pnl2.isVisible()) {
    			setBorderHD(pnl2);
    			moveBHPage(PnlBanHang.bh2, 2);
    			return;
    		}else if(pnl3.isVisible()) {
    			setBorderHD(pnl3);
    			moveBHPage(PnlBanHang.bh3, 3);
    			return;
    		}else if(pnl4.isVisible()) {
    			setBorderHD(pnl4);
    			moveBHPage(PnlBanHang.bh4, 4);
    			return;
    		}else if(pnl5.isVisible()) {
    			setBorderHD(pnl5);
    			moveBHPage(PnlBanHang.bh5, 5);
    			return;
    		}
    	}
    		
    }
    
    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        removeHDPage(pnl1,1);
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        removeHDPage(pnl2,2);
    }//GEN-LAST:event_btn2ActionPerformed

    private void lbl2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl2MouseClicked
        // TODO add your handling code here:
        if(pnl2.getBorder()==null)
        moveBHPage(PnlBanHang.bh2,2);
    }//GEN-LAST:event_lbl2MouseClicked

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        removeHDPage(pnl3,3);
    }//GEN-LAST:event_btn3ActionPerformed

    private void lbl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl3MouseClicked
        // TODO add your handling code here:
        if(pnl3.getBorder()==null)
        moveBHPage(PnlBanHang.bh3,3);
    }//GEN-LAST:event_lbl3MouseClicked

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        removeHDPage(pnl4,4);
    }//GEN-LAST:event_btn4ActionPerformed

    private void lbl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl4MouseClicked
        // TODO add your handling code here:
        if(pnl4.getBorder()==null)
        moveBHPage(PnlBanHang.bh4,4);
    }//GEN-LAST:event_lbl4MouseClicked

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:111
        removeHDPage(pnl5,5);

    }//GEN-LAST:event_btn5ActionPerformed

    private void lbl5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl5MouseClicked
        // TODO add your handling code here:
        if(pnl5.getBorder()==null)
        moveBHPage(PnlBanHang.bh5,5);
    }//GEN-LAST:event_lbl5MouseClicked
    private boolean themHDPage(boolean temp, JPanel pnl) {
    	if(!(pnl.isVisible()||temp)) {
			pnl.setVisible(true);
			temp = true;
			lblSpace.setPreferredSize(new Dimension(lblSpace.getWidth()-155,lblSpace.getHeight()));
			hdCount++;
			return temp;
		}
    	return temp;
    }
    private void btnThemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHoaDonActionPerformed
        // TODO add your handling code here:111
        boolean temp = false;
        temp = themHDPage(temp, pnl1);
        if(temp)return;
        temp =themHDPage(temp, pnl2);
        if(temp)return;
        temp =themHDPage(temp, pnl3);
        if(temp)return;
        temp =themHDPage(temp, pnl4);
        if(temp)return;
        temp =themHDPage(temp, pnl5);
        

    }//GEN-LAST:event_btnThemHoaDonActionPerformed
    
   
    
    public void reload() {
    	double tongTien = tinhTongThanhTien(); //thanhtien của tất cả cthd
    	txtTongTien.setText(Formater.decimalFormat(tongTien));
    	double tienKhachDua = 0;
    	if(!txtTienDua.getText().replaceAll(",", "").equalsIgnoreCase(""))
    			tienKhachDua = Double.parseDouble(txtTienDua.getText().replaceAll(",", ""));
    	double tienThua = updateTienThua();
    }
    
    private double updateTienThua() {
		// TODO Auto-generated method stub
    	double tienThua = 0;
    	
    	double tongTien = 0;
    	if(!txtTongTien.getText().isEmpty())
    			tongTien = Double.parseDouble(txtTongTien.getText().replaceAll(",", ""));
		double tienKD = 0;
		if(!txtTienDua.getText().isEmpty())
			tienKD = Double.parseDouble(txtTienDua.getText().replaceAll(",", ""));
		tienThua = tienKD - tongTien;
		tienThua = Formater.roundToNearest500(tienThua);
		if(tienThua<0) {
			txtTienThua.setText("");
			return -1;
		}else {
			txtTienThua.setText(Formater.decimalFormat(tienThua));
			return tienThua;
		}
	}

	

	public double roundToNearest500(double number) {
        // Chia số ban đầu cho 500
    	double quotient = number / 500;
        // Làm tròn kết quả chia
    	double roundedQuotient = Math.round(quotient);
        // Nhân kết quả tròn với 500
    	double roundedNumber = roundedQuotient * 500;
        return roundedNumber;
    }

	private double tinhTongThanhTien() {
    	// TODO Auto-generated method stub
    	double tongTien = 0;
    	for(int i=0;i<tableModel.getRowCount();i++) {
    		double thanhTien = Double.parseDouble(tableModel.getValueAt(i, 4).toString().replaceAll(",", ""));
    		tongTien+=thanhTien;
    	}
    	return tongTien;
	}

	//Them don thuoc mau
   
    
    public void updateTime() {
   	 // Tạo và khởi chạy một luồng để cập nhật thời gian liên tục
    	Thread updateTimeThread = new Thread(() -> {
            try {
                while (true) {
                	LocalDateTime now = LocalDateTime.now();
                    
                    // Định dạng thời gian
                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy - HH:mm:ss");
                    
                    // Chuyển đổi LocalDateTime thành chuỗi theo định dạng mong muốn
                    String formattedDateTime = now.format(formatter);
                    txtTimer.setText(formattedDateTime); // Cập nhật thời gian
                    Thread.sleep(1000); // Ngủ 1 giây
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });
        updateTimeThread.start(); // Bắt đầu luồng

       
   }
    
    private void phimTat() {
    	// Tạo một Action và gán chức năng khi nhấn phím 
    	Action action = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
          	  if(tbChiTietHoaDon.getSelectedRow()!=-1)
          		tableModel.removeRow(tbChiTietHoaDon.getSelectedRow());
            }
        };
        Action action2 = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
          	  timMaSP1.requestFocus();
          	  timMaSP1.setText("");
            }
        };
     // Gắn hành động với phím tắt 
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F11, 0), "performF11Action");
        this.getActionMap().put("performF11Action", action);
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0), "performF4Action");
        this.getActionMap().put("performF4Action", action2);
		
	}
    
    public void setTable() {
    	
    	tbChiTietHoaDon.setModel(tableModel);
    	// Ẩn cột thứ 4 (cột lưu trữ các tùy chọn combobox)
        tbChiTietHoaDon.getColumnModel().getColumn(6).setMinWidth(0);
        tbChiTietHoaDon.getColumnModel().getColumn(6).setMaxWidth(0);
        tbChiTietHoaDon.getColumnModel().getColumn(6).setWidth(0);
        tbChiTietHoaDon.getColumnModel().getColumn(6).setPreferredWidth(0);
    	TableColumn column1 = tbChiTietHoaDon.getColumnModel().getColumn(0);
        column1.setPreferredWidth(200);
        TableColumn column5 = tbChiTietHoaDon.getColumnModel().getColumn(5);
        column5.setPreferredWidth(5);
    	TableColumn column = tbChiTietHoaDon.getColumnModel().getColumn(2);
        column.setCellEditor(new SpinnerEditor());
        TableActionEvent event = new TableActionEvent() {
			
			@Override
			public void onDelete(int row) {
				if(tbChiTietHoaDon.isEditing()) {
					tbChiTietHoaDon.getCellEditor().stopCellEditing();
				}
				DefaultTableModel model = (DefaultTableModel)tbChiTietHoaDon.getModel();
				model.removeRow(row);
				dsHH.remove(row);
				reload();
				
			}
		};
        tbChiTietHoaDon.getColumnModel().getColumn(5).setCellEditor(new TableActionCellEditor(event));
        tbChiTietHoaDon.getColumnModel().getColumn(5).setCellRenderer(new ButtonRender());
        tableModel.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {//Bắt sự kiện thay đổi số lượng và đơn vị tính trên jtable
            	try {        	
                //flag2
            		if(isTableUpdating) {
            			isTableUpdating = false;
            			return;
            		}
                	int row = tbChiTietHoaDon.getSelectedRow();
                	if(row==-1)return; //Trường hợp sl thay đổi khi thêm mới  
                	int soLuong = Integer.parseInt(tableModel.getValueAt(row, 2).toString());
                	if(soLuong>dsHH.get(row).getSoLuongDinhMuc()) {
                		JOptionPane.showMessageDialog(null, "Hàng hóa không đủ số lượng!");
                		tableModel.setValueAt(dsHH.get(row).getSoLuongDinhMuc(), row, 2);
            			return;
                	}
                	double thanhTien = soLuong * dsHH.get(row).getGiaBan();
                	isTableUpdating = true;
                	tableModel.setValueAt(Formater.decimalFormat(thanhTien), row, 4);
                	reload();
    				return;
                	
				} catch (Exception e2) {
					// TODO: handle exception
					return;
				}
            }
        });
    }
    
    private boolean isTableUpdating = false;
    private int hdCount = 1;
    String headerString[] = "Tên sản phẩm;Đơn vị tính;Số lượng;Giá bán;Thành tiền; ; ".split(";");
    private DefaultTableModel tableModel = new DefaultTableModel(headerString,0);
    private List<HangHoa> dsHH = new ArrayList<>();
    private HangHoaDao hangHoaDao;
    private HoaDonDao hoaDonDao;

    private LoHangDao loHangDAO;
    private ChiTietHoaDonDao chiTietHDDao;
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThanhToanVaInHoaDon;
    private javax.swing.JButton btnThemHoaDon;
    private javax.swing.JButton btnThemKhachHang;
    private javax.swing.JPanel header;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbLapHD;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbl4;
    private javax.swing.JLabel lbl5;
    private javax.swing.JLabel lblDiemThuong;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblKhachHang;
    private javax.swing.JLabel lblPhimTat;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblSpace;
    private javax.swing.JLabel lblTenKH;
    private javax.swing.JLabel lblThanhToan;
    private javax.swing.JLabel lblTienDua;
    private javax.swing.JLabel lblTienThua;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JPanel pnl3;
    private javax.swing.JPanel pnl4;
    private javax.swing.JPanel pnl5;
    private javax.swing.JPanel pnlBody;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JPanel pnlKhachHang;
    private javax.swing.JPanel pnlLeft;
    private javax.swing.JPanel pnlRight;
    private javax.swing.JPanel pnlThanhToan;
    private javax.swing.JPanel pnlThongTinKhachHang;
    private javax.swing.JScrollPane spGhiChu;
    private javax.swing.JTable tbChiTietHoaDon;
    private sampleUi.TimMaSP timMaSP1;
    private sampleUi.TimSDTKhachHang timSDTKhachHang1;
    private javax.swing.JTextField txtDiemThuong;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtSDTKH;
    private javax.swing.JTextField txtTenKH;
    private javax.swing.JTextField txtTienDua;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTimer;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
